name: Create Release on PR

on:
  pull_request:
    types:
      - closed
env:
  REGISTRY: docker.io
  IMAGE_NAME: ku9nov/faynosync
  
jobs:
  create-release:
    if: |
      contains(github.event.pull_request.title, 'release') == true &&
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Extract Version
        id: extract-version
        run: |
          # Use grep to find the first occurrence of the version number matching "## v" pattern
          version=$(grep -m 1 -oP '## v\d+\.\d+\.\d+' CHANGELOG.md | cut -d ' ' -f 2)
          echo "version=$version" >> $GITHUB_ENV

      - name: Extract Changelog
        id: extract-changelog
        run: |
          # Extract the content between the last two version headers
          changelog=$(awk '/^## v[0-9]+\.[0-9]+\.[0-9]+/{if (!version) {version=$0; next}} /^## v[0-9]+\.[0-9]+\.[0-9]+/{exit} {if (version) description = description ORS $0} END {if (version) print description}' CHANGELOG.md | sed -e '/^## v[0-9]+\.[0-9]+\.[0-9]+/d; s/^# //' > changelog.txt)
          echo "changelog_file=changelog.txt" >> $GITHUB_ENV
          
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          body_path: ${{ env.changelog_file }}
          draft: false
          prerelease: false
          
  push_to_registry:
    if: |
      contains(github.event.pull_request.title, 'release') == true &&
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main'
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Version
        id: extract-version
        run: |
          # Use grep to find the first occurrence of the version number matching "## v0.0.0" pattern
          version=$(grep -m 1 -oP '## v\d+\.\d+\.\d+' CHANGELOG.md | cut -d ' ' -f 2)
          echo "version=$version" >> $GITHUB_ENV

      - name: Set tag based on version
        id: set_tag
        run: |
          echo "IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.version }}" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
